apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: deno-webserver
  name: deno-webserver
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.deno.replicaCount }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: deno-webserver
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: deno-webserver
    spec:
      containers:
      - image: {{ .Values.deno.image.repository }}
        imagePullPolicy: {{ .Values.deno.image.pullPlicy }}
        name: deno-webserver
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
                - mountPath: {{ .Values.deno.volumeMount.mountPath }}
                  name: {{ .Values.deno.volumeMount.name }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
                - name: {{ .Values.deno.volume.name }}
                  persistentVolumeClaim:
                      claimName: {{ .Values.deno.volume.claimName }}
